// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagementSystem.TaskService.Infrastructure.DataAccess.ORM;

#nullable disable

namespace TaskManagementSystem.TaskService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250811151443_Removed index idx_uniq_board_id_column_id")]
    partial class Removedindexidx_uniq_board_id_column_id
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskManagementSystem.TaskService.Core.Aggregates.TaskAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AssignedToId")
                        .HasColumnType("uuid")
                        .HasColumnName("assigned_to_id");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid")
                        .HasColumnName("board_id");

                    b.Property<Guid>("ColumnId")
                        .HasColumnType("uuid")
                        .HasColumnName("column_id");

                    b.Property<long>("Deadline")
                        .HasColumnType("bigint")
                        .HasColumnName("deadline");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("Rank")
                        .HasColumnType("bigint")
                        .HasColumnName("rank");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_tasks");

                    b.HasIndex("BoardId")
                        .HasDatabaseName("ix_tasks_board_id");

                    b.HasIndex("ColumnId")
                        .HasDatabaseName("ix_tasks_column_id");

                    b.HasIndex("Rank")
                        .HasDatabaseName("ix_tasks_rank");

                    b.HasIndex("BoardId", "ColumnId")
                        .HasDatabaseName("ix_tasks_board_id_column_id");

                    b.HasIndex("Rank", "BoardId")
                        .IsUnique()
                        .HasDatabaseName("ix_tasks_rank_board_id");

                    b.ToTable("tasks", (string)null);
                });

            modelBuilder.Entity("TaskManagementSystem.TaskService.Core.Aggregates.TaskAggregate", b =>
                {
                    b.OwnsOne("TaskManagementSystem.AuthService.Core.ValueObjects.Timestamps", "Timestamps", b1 =>
                        {
                            b1.Property<Guid>("TaskAggregateId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<long>("CreatedAt")
                                .HasColumnType("bigint")
                                .HasColumnName("created_at");

                            b1.Property<long>("UpdatedAt")
                                .HasColumnType("bigint")
                                .HasColumnName("updated_at");

                            b1.HasKey("TaskAggregateId");

                            b1.ToTable("tasks");

                            b1.WithOwner()
                                .HasForeignKey("TaskAggregateId")
                                .HasConstraintName("fk_tasks_tasks_id");
                        });

                    b.OwnsOne("TaskManagementSystem.SharedLib.ValueObjects.AuthorInfo", "AuthorInfo", b1 =>
                        {
                            b1.Property<Guid>("TaskAggregateId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<Guid>("CreatedById")
                                .HasColumnType("uuid")
                                .HasColumnName("created_by_id");

                            b1.Property<Guid>("UpdatedById")
                                .HasColumnType("uuid")
                                .HasColumnName("updated_by_id");

                            b1.HasKey("TaskAggregateId");

                            b1.ToTable("tasks");

                            b1.WithOwner()
                                .HasForeignKey("TaskAggregateId")
                                .HasConstraintName("fk_tasks_tasks_id");
                        });

                    b.Navigation("AuthorInfo")
                        .IsRequired();

                    b.Navigation("Timestamps")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
